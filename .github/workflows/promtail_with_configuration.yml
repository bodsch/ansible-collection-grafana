---

name: promtail with various configuration

on:
  workflow_run:
    workflows:
      - "promtail"
    types:
      - completed

env:
  COLLECTION_NAMESPACE: bodsch
  COLLECTION_NAME: grafana
  PY_COLORS: '1'
  ANSIBLE_FORCE_COLOR: '1'

jobs:
  debian:
    name: "${{ matrix.image }} / ${{ matrix.scenario }} / ${{ matrix.ansible-version }} / ${{ matrix.python_version }}"
    runs-on: ubuntu-20.04
    if: ${{ github.event_name == 'schedule' || github.event.workflow_run.conclusion == 'success' }}
    strategy:
      fail-fast: false
      matrix:
        image:
          - debian:12
        ansible-version:
          - '8.5'
        python_version:
          - "3.11"
        scenario:
          - latest
          - custom-scrape-configs
          - with-updates
        collection_role:
          - promtail

    steps:
      - name: check out the codebase.
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_branch }}

      - name: üêç set up python
        uses: actions/setup-python@v5
        with:
          python-version: "${{ matrix.python_version }}"

      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r test-requirements.txt

      - name: force reinstall of community.docker
        run: |
          mkdir -p /home/runner/.ansible/collections
          ansible-galaxy collection install community.docker --force

      - name: Install collection
        run: |
          make \
            install

      - name: test ${{ matrix.collection_role }} - ${{ matrix.scenario }}
        run: |
          make \
            test \
              -e TOX_ANSIBLE="ansible_${{ matrix.ansible-version }}" \
              -e DISTRIBUTION="${{ matrix.image }}" \
              -e COLLECTION_ROLE="${{ matrix.collection_role }}" \
              -e COLLECTION_SCENARIO="${{ matrix.scenario }}"
