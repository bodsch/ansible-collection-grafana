---

- name: get latest release
  delegate_to: localhost
  become: false
  run_once: true
  when:
    - grafana_version == "latest"
  block:
    - name: get latest release
      delegate_to: localhost
      become: false
      run_once: true
      bodsch.scm.github_latest:
        project: grafana
        repository: grafana
        user: "{{ lookup('env', 'GH_USER') | default(omit) }}"
        password: "{{ lookup('env', 'GH_TOKEN') | default(omit) }}"
        github_tags: "{{ grafana_scm.use_tags | default('false') }}"
        without_beta: "{{ grafana_scm.without_beta | default('false') }}"
        filter_elements: "{{ grafana_scm.version_filter | default([]) }}"
      register: _latest_release

    - name: re-define grafana_version
      ansible.builtin.set_fact:
        grafana_version: "{{ _latest_release.latest_release }}"

- name: define download information
  ansible.builtin.set_fact:
    grafana_release: "{{ grafana_defaults_release | combine(grafana_release, recursive=True) }}"

- name: define delegate instance for download handling
  ansible.builtin.set_fact:
    grafana_delegate_to: "{{ ansible_host }}"
    grafana_local_tmp_directory: "{{
        lookup('env', 'CUSTOM_LOCAL_TMP_DIRECTORY') |
        default('/var/cache/ansible/grafana', true) }}/{{ grafana_version }}"
  when:
    - grafana_direct_download

- name: create download directory
  become: false
  delegate_to: "{{ grafana_delegate_to }}"
  run_once: "{{ 'false' if grafana_direct_download else 'true' }}"
  ansible.builtin.file:
    path: "{{ grafana_local_tmp_directory }}"
    state: directory
    mode: 0750

- name: detect the downloaded grafana archive
  become: false
  delegate_to: "{{ grafana_delegate_to }}"
  run_once: "{{ 'false' if grafana_direct_download else 'true' }}"
  ansible.builtin.stat:
    path: "{{ grafana_local_tmp_directory }}/{{ grafana_release.file }}"
  register: stat_grafana_archive

- name: download
  when:
    - stat_grafana_archive.stat is defined
    - not stat_grafana_archive.stat.exists | default('false')
  block:
    - name: download grafana binary archive
      become: false
      delegate_to: "{{ grafana_delegate_to }}"
      run_once: "{{ 'false' if grafana_direct_download else 'true' }}"
      ansible.builtin.get_url:
        url: "{{ grafana_release.download_url }}/{{ grafana_release.file }}"
        dest: "{{ grafana_local_tmp_directory }}/"
        mode: 0644
      register: _download_archive
      until: _download_archive is succeeded
      retries: 5
      delay: 2
      check_mode: false

  rescue:
    - name: delete download directory
      become: false
      delegate_to: "{{ grafana_delegate_to }}"
      run_once: "{{ 'false' if grafana_direct_download else 'true' }}"
      ansible.builtin.file:
        path: "{{ grafana_local_tmp_directory }}"
        state: absent

    - name: exit with fail
      ansible.builtin.fail:
        msg: A serious error occurred when downloading the archive.

...
