---

- name: ensure grafana service accounts directory exists
  delegate_to: localhost
  become: false
  run_once: true
  ansible.builtin.file:
    path: "{{ grafana_service_accounts.store_directory }}/{{ inventory_hostname }}"
    state: directory
    mode: 0750

- name: manage grafana service accounts
  grafana_service_accounts:
    state: manage
    grafana_url: "http://127.0.0.1:3000"
    grafana_admin:
      username: "{{ grafana_config_security.admin_user }}"
      password: "{{ grafana_config_security.admin_password }}"
    api_token: "{{ grafana_api_token | default(omit) }}"
    # :
    # org_id:
    service_accounts: "{{ grafana_service_accounts.accounts }}"
  register: manage_service_accounts

- name: save service account files to ansible controller
  become: true
  ansible.builtin.fetch:
    src: "{{ item.value.key_file }}"
    dest: "{{ grafana_service_accounts.store_directory }}/{{ inventory_hostname }}/{{ item.value.key_file | basename }}"
    flat: true
    validate_checksum: false
    mode: 0644
  no_log: true
  loop: "{{ manage_service_accounts['result'] | dict2items }}"
  loop_control:
    label: "{{ grafana_service_accounts.store_directory }}/{{ inventory_hostname }}/{{ item.value.key_file | basename }}"
  when:
    - item.value is defined
    - item.value.key_file is defined

- name: list service accounts files
  delegate_to: localhost
  become: false
  run_once: true
  ansible.builtin.find:
    paths: "{{ grafana_service_accounts.store_directory }}/{{ inventory_hostname }}/"
    patterns:
      - "sa-*.key"
    recurse: false
    file_type: file
  register: found_sa_keyfiles
  notify:
    - list service accounts files

# - name: list service accounts files
#   run_once: true
#   ansible.builtin.debug:
#     msg: "{{ found_sa_keyfiles.files | file_list }}"

...
