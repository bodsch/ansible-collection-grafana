---

- name: user and group handling
  when:
    - loki_system_user != "root"
  block:
    - name: create loki group
      ansible.builtin.group:
        name: "{{ loki_system_group }}"
        state: present
        system: true

    - name: create loki user
      ansible.builtin.user:
        name: "{{ loki_system_user }}"
        groups: "{{ loki_system_group }}"
        append: true
        shell: /usr/sbin/nologin
        system: true
        createhome: false
        home: /nonexistent

- name: create install directory
  ansible.builtin.file:
    path: "{{ loki_install_path }}"
    state: directory
    owner: "{{ loki_system_user }}"
    group: "{{ loki_system_group }}"
    mode: 0755

- name: create loki data directory
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ loki_system_user }}"
    group: "{{ loki_system_group }}"
    mode: 0755
  loop:
    - "{{ loki_storage_dir }}"
    - "{{ loki_storage_dir }}/index"
    - "{{ loki_storage_dir }}/chunks"
    - "{{ loki_storage_dir }}/wal"
    - "{{ loki_storage_dir }}/compactor"
    - "{{ loki_storage_dir }}/boltdb-shipper-active"
    - "{{ loki_storage_dir }}/boltdb-shipper-cache"
    - "{{ loki_storage_dir }}/rules"
    - "{{ loki_storage_dir }}/rules-scratch"
    - "{{ loki_storage_dir }}/ruler-wal"

- name: detect installed loki binary
  ansible.builtin.stat:
    path: "{{ loki_install_path }}/loki"
  register: stat_loki_binary

- name: detect activated loki binary
  ansible.builtin.stat:
    path: /usr/bin/loki
  register: stat_loki_activated

- name: install and activate loki
  when:
    - (stat_loki_binary.stat is defined and not stat_loki_binary.stat.exists | default('false')) or
      not stat_loki_activated.stat | bodsch.prometheus.linked_version(loki_install_path, loki_version)
  block:
    - name: propagate binaries
      ansible.builtin.copy:
        src: "{{ loki_local_tmp_directory }}/{{ item }}-{{ ansible_facts.system | lower }}-{{ system_architecture }}"
        dest: "{{ loki_install_path }}/{{ item }}"
        mode: 0755
        owner: "{{ loki_system_user }}"
        group: "{{ loki_system_group }}"
        remote_src: "{{ 'true' if loki_direct_download else 'false' }}"
      loop: "{{ loki_packages }}"
      loop_control:
        index_var: index
        label: "{{ item }}"

    - name: create link to binary
      ansible.builtin.file:
        src: "{{ loki_install_path }}/{{ item }}"
        dest: /usr/bin/{{ item }}
        state: link
        force: true
      loop: "{{ loki_packages }}"
      loop_control:
        index_var: index
        label: "{{ item }}"
      notify:
        - restart loki

  rescue:
    # - name: delete install directory
    #   ansible.builtin.file:
    #     path: "{{ grafana_install_path }}"
    #     state: absent

    - name: exit with fail
      ansible.builtin.fail:
        msg: A serious error occurred during the installation of the binary.

- name: systemd
  when:
    - ansible_service_mgr | lower == "systemd"
  block:
    - name: create loki run configuration
      ansible.builtin.template:
        src: "loki.j2"
        dest: "{{ loki_defaults_directory }}/loki"
        force: true
        owner: root
        group: "{{ loki_system_group }}"
        mode: 0640
      notify:
        - verify config
        - reload loki

    - name: create systemd service unit
      ansible.builtin.template:
        src: "init/systemd/loki.service.j2"
        dest: "{{ systemd_lib_directory }}/loki.service"
        owner: root
        group: root
        mode: 0644
      notify:
        - daemon-reload
        - restart loki

- name: openrc
  when:
    - ansible_service_mgr | lower == "openrc"
  block:
    - name: create openrc service configuration
      ansible.builtin.template:
        src: "init/openrc/conf.d/loki.j2"
        dest: "/etc/conf.d/loki"
        owner: root
        group: root
        mode: 0644

    - name: create openrc init configuration
      ansible.builtin.template:
        src: "init/openrc/init.d/loki.j2"
        dest: "/etc/init.d/loki"
        owner: root
        group: root
        mode: 0750

- name: create custom fact file
  bodsch.core.facts:
    name: loki
    facts:
      version: "{{ loki_version }}"

...
