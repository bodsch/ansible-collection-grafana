---

- name: detect the downloaded archive
  become: false
  delegate_to: "{{ loki_delegate_to }}"
  run_once: "{{ 'false' if loki_direct_download else 'true' }}"
  ansible.builtin.stat:
    path: "{{ loki_local_tmp_directory }}/{{ item }}-{{ ansible_facts.system | lower }}-{{ system_architecture }}.zip"
  register: stat_loki_archive

- name: download
  when:
    - stat_loki_archive.stat is defined
    - not stat_loki_archive.stat.exists | default('false')
  block:
    - name: define checksum for {{ item }} ({{ system_architecture }} architecture)
      ansible.builtin.set_fact:
        __loki_checksum: "sha256:{{ vars._latest_checksum.checksums | bodsch.grafana.loki_checksum(item, ansible_facts.system | lower, system_architecture) }}"
      when:
        - vars._latest_checksum.rc == 0
        - vars._latest_checksum.checksum is defined
        - vars._latest_checksum.checksum | string | length > 0

    - name: download {{ item }} archive
      become: false
      delegate_to: "{{ loki_delegate_to }}"
      run_once: "{{ 'false' if loki_direct_download else 'true' }}"
      ansible.builtin.get_url:
        url: "{{ loki_release.github_url }}/download/v{{ loki_version }}/{{ item }}-{{ ansible_facts.system | lower }}-{{ system_architecture }}.zip"
        dest: "{{ loki_local_tmp_directory }}/{{ item }}-{{ ansible_facts.system | lower }}-{{ system_architecture }}.zip"
        checksum: "{{ __loki_checksum | default(omit) }}"
        mode: 0644
      register: _download_archive
      until: _download_archive is succeeded
      retries: 5
      delay: 2
      check_mode: false

    - name: extract {{ item }} archive
      become: false
      delegate_to: "{{ loki_delegate_to }}"
      run_once: "{{ 'false' if loki_direct_download else 'true' }}"
      ansible.builtin.unarchive:
        src: "{{ loki_local_tmp_directory }}/{{ item }}-{{ ansible_facts.system | lower }}-{{ system_architecture }}.zip"
        dest: "{{ loki_local_tmp_directory }}/"
        copy: false

  rescue:
    - name: delete download directory
      become: false
      delegate_to: "{{ loki_delegate_to }}"
      run_once: "{{ 'false' if loki_direct_download else 'true' }}"
      ansible.builtin.file:
        path: "{{ loki_local_tmp_directory }}"
        state: absent

    - name: exit with fail
      ansible.builtin.fail:
        msg: A serious error occurred when downloading the archive.

...
